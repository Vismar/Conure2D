#include "EngineApp.hpp"

using namespace Engine;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EngineApp::EngineApp()
    : _renderSystem(std::make_unique<Renderer::RenderSystem>())
    , _logicThreadIsWorking(false)
    , _sceneMap(std::make_unique<Core::SceneMap>())
{ }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EngineApp& EngineApp::Instance()
{
    static EngineApp engineApp;
    return engineApp;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void EngineApp::Run()
{
    // Start logic thread
    std::thread logicThread(&EngineApp::_LogicLoop, this);
    logicThread.detach();

    // Start render system
    _renderSystem->Start(*_sceneMap);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void EngineApp::End()
{
    // Wait all systems to end its work
    while (_logicThreadIsWorking); // wait until logic thread will end its work
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Renderer::RenderSystem& EngineApp::GetRenderSystem() const
{
    return *_renderSystem;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Core::SceneMap& EngineApp::GetSceneMap() const
{
    return *_sceneMap;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void EngineApp::_LogicLoop()
{
    // Launch logic loop only if it was not started yet
    if (!_logicThreadIsWorking)
    {
        _logicThreadIsWorking = true;

        // If render system works properly, update scenes
        while (_renderSystem->NoErrors())
        {
            _sceneMap->UpdateScenes();
        }

        // Mark that logic thread finished its work
        _logicThreadIsWorking = false;
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
