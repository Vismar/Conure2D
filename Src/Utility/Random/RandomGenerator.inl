#pragma once

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
T RandomGenerator::Get(const T from, const T to)
{
    std::uniform_int_distribution<T> dist(from, to);
    return dist(_mtEngine);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline int64_t RandomGenerator::Get<int64_t>(const int64_t from, const int64_t to)
{
    std::uniform_int_distribution<int64_t> dist(from, to);
    return dist(_mtEngine64);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline uint64_t RandomGenerator::Get<uint64_t>(const uint64_t from, const uint64_t to)
{
    std::uniform_int_distribution<uint64_t> dist(from, to);
    return dist(_mtEngine64);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline float RandomGenerator::Get<float>(const float from, const float to)
{
    std::uniform_real_distribution<float> dist(from, to);
    return dist(_mtEngine);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline double RandomGenerator::Get<double>(const double from, const double to)
{
    std::uniform_real_distribution<double> dist(from, to);
    return dist(_mtEngine64);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
T RandomGenerator::Get(std::uniform_int_distribution<T>& distr)
{
    return distr(_mtEngine);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline int64_t RandomGenerator::Get<int64_t>(std::uniform_int_distribution<int64_t>& distr)
{
    return distr(_mtEngine64);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline uint64_t RandomGenerator::Get<uint64_t>(std::uniform_int_distribution<uint64_t>& distr)
{
    return distr(_mtEngine64);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline float RandomGenerator::Get<float>(std::uniform_real_distribution<float>& distr)
{
    return distr(_mtEngine);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <>
inline double RandomGenerator::Get<double>(std::uniform_real_distribution<double>& distr)
{
    return distr(_mtEngine64);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
