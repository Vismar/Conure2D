#include "IOSystem.hpp"
#include <thread>
#include <chrono>

using namespace C2D;
using namespace std::chrono_literals;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

IOSystem::IOSystem()
: _turnedOn(false)
, _isRunning(false)
, _textWriteStream({"", std::ios_base::out, std::fstream()})
{ }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void IOSystem::Start()
{
    // Start IO thread only if it was not started previously
    if (!_turnedOn.load() || _isRunning.load())
    {
        // Start IO thread
        _turnedOn = true;
        std::thread(&IOSystem::_Loop, this).detach();
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool IOSystem::IsRunning() const
{
    return false;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void IOSystem::Stop()
{
    _turnedOn = false;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void IOSystem::WriteToTextFile(std::string&& fileName, std::string&& data, const std::ios_base::openmode openMode) const
{
    switch (openMode)
    {
    case std::ios_base::app:
    case std::ios_base::ate:
    case std::ios_base::trunc:
        break;
    default:
        // All other flags should be ignored
        break;
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void IOSystem::_Loop()
{
    _isRunning = false;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void IOSystem::_WriteTextData()
{ }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
