#include "TimeSpan.hpp"

using namespace C2D;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TimeSpan::TimeSpan(Time start, Time end) : _start(std::move(start)), _end(std::move(end))
{ }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TimeSpan::SetNewStart(const C2D::Time& newStart)
{
    if (newStart < _end)
    {
        _start = newStart;
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TimeSpan::SetNewStart(C2D::Time&& newStart)
{
    if (newStart < _end)
    {
        _start = std::move(newStart);
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TimeSpan::SetNewEnd(const Time& newEnd)
{
    _start = _end;
    _end = newEnd;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TimeSpan::SetNewEnd(Time&& newEnd)
{
    _start = _end;
    _end = newEnd;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Time TimeSpan::Duration() const
{
    return _end - _start;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const Time& TimeSpan::Start() const
{
    return _start;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const Time& TimeSpan::End() const
{
    return _end;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
