language: cpp

script:
  - eval "${MATRIX_EVAL}"
  - mkdir Build && cd Build
  - cmake .. ${BUILD_TYPE}
  - cmake --build . --target all
  - cmake --build . --target test

matrix:
  fast_finish: true
  include:
    - name: "Linux gcc Debug"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # Required by SFML
            - libxrandr-dev
            - libudev-dev
            - libopenal-dev
            - libvorbis-dev
            - libflac-dev
            # C++17
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Debug"

    - name: "Linux gcc Release"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # Required by SFML
            - libxrandr-dev
            - libudev-dev
            - libopenal-dev
            - libvorbis-dev
            - libflac-dev
            # C++17
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"

    - name: "Linux gcc Production"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # Required by SFML
            - libxrandr-dev
            - libudev-dev
            - libopenal-dev
            - libvorbis-dev
            - libflac-dev
            # C++17
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Production"

    - name: "Linux clang Debug"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            # Required by SFML
            - libxrandr-dev
            - libudev-dev
            - libopenal-dev
            - libvorbis-dev
            - libflac-dev
            # C++17
            - g++-8
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Debug"

    - name: "Linux clang Release"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            # Required by SFML
            - libxrandr-dev
            - libudev-dev
            - libopenal-dev
            - libvorbis-dev
            - libflac-dev
            # C++17
            - g++-8
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"

    - name: "Linux clang Production"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            # Required by SFML
            - libxrandr-dev
            - libudev-dev
            - libopenal-dev
            - libvorbis-dev
            - libflac-dev
            # C++17
            - g++-8
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Production"

    - name: "Windows Visual Studio 15 2017 Production"
      os: windows
      env:
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Production"
      script:
        - eval "${MATRIX_EVAL}"
        - mkdir Build && cd Build
        - cmake .. -G "MinGW Makefiles" ${BUILD_TYPE}
        - mingw32-make
        - mingw32-make test ARGS="-V"