language: cpp

install:
  - sudo apt-get -qq update
  - sudo apt-get install -y libassimp-dev libglm-dev graphviz libxcb-dri3-0 libxcb-present0 libpciaccess0 cmake libpng-dev libxcb-dri3-dev libx11-dev libx11-xcb-dev libmirclient-dev libwayland-dev libxrandr-dev
  - export VK_VERSION=1.2.135.0
  - wget -O vulkansdk-linux-x86_64-$VK_VERSION.tar.gz https://sdk.lunarg.com/sdk/download/$VK_VERSION/linux/vulkansdk-linux-x86_64-$VK_VERSION.tar.gz
  - tar zxf vulkansdk-linux-x86_64-$VK_VERSION.tar.gz
  - export VULKAN_SDK=$TRAVIS_BUILD_DIR/$VK_VERSION/x86_64
  - ls $VULKAN_SDK

script:
  - eval "${MATRIX_EVAL}"
  - mkdir Build && cd Build
  - cmake .. ${BUILD_TYPE}
  - sudo make
  - make test ARGS="-V"

matrix:
  fast_finish: true
  include:
    - name: "Linux gcc Debug"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # C++20
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Debug"

    - name: "Linux gcc Release"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            # C++20
            - g++-9
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"

    - name: "Linux clang Debug"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-8.0
          packages:
            # C++20
            - g++-9
            - clang-8.0
      env:
        - MATRIX_EVAL="CC=clang-8.0 && CXX=clang++-8.0"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Debug"

    - name: "Linux clang Release"
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-8.0
          packages:
            # C++17
            - g++-9
            - clang-8.0
      env:
        - MATRIX_EVAL="CC=clang-8.0 && CXX=clang++-8.0"
        - BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"